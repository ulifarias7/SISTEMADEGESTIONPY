PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> cd "c:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion"
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> tree/f
tree/f : El término 'tree/f' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente 
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ tree/f
+ ~~~~~~
    + CategoryInfo          : ObjectNotFound: (tree/f:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
 
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> tree
Listado de rutas de carpetas
El número de serie del volumen es 2EC9-9A5A
C:.
├───src
│   ├───Controller
│   ├───Model
│   ├───routes
│   ├───static
│   └───Templates
└───venv
    ├───Include
    ├───Lib
    │   └───site-packages
    │       ├───pip
    │       │   ├───_internal
    │       │   │   ├───cli
    │       │   │   │   └───__pycache__
    │       │   │   ├───commands
    │       │   │   │   └───__pycache__
    │       │   │   ├───distributions
    │       │   │   │   └───__pycache__
    │       │   │   ├───index
    │       │   │   │   └───__pycache__
    │       │   │   ├───locations
    │       │   │   │   └───__pycache__
    │       │   │   ├───metadata
    │       │   │   │   └───__pycache__
    │       │   │   ├───models
    │       │   │   │   └───__pycache__
    │       │   │   ├───network
    │       │   │   │   └───__pycache__
    │       │   │   ├───operations
    │       │   │   │   ├───build
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───install
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───req
    │       │   │   │   └───__pycache__
    │       │   │   ├───resolution
    │       │   │   │   ├───legacy
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───resolvelib
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───utils
    │       │   │   │   └───__pycache__
    │       │   │   ├───vcs
    │       │   │   │   └───__pycache__
    │       │   │   └───__pycache__
    │       │   ├───_vendor
    │       │   │   ├───cachecontrol
    │       │   │   │   ├───caches
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───certifi
    │       │   │   │   └───__pycache__
    │       │   │   ├───chardet
    │       │   │   │   ├───cli
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───metadata
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───colorama
    │       │   │   │   └───__pycache__
    │       │   │   ├───distlib
    │       │   │   │   ├───_backport
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───html5lib
    │       │   │   │   ├───filters
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───treeadapters
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───treebuilders
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───treewalkers
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───_trie
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───idna
    │       │   │   │   └───__pycache__
    │       │   │   ├───msgpack
    │       │   │   │   └───__pycache__
    │       │   │   ├───packaging
    │       │   │   │   └───__pycache__
    │       │   │   ├───pep517
    │       │   │   │   ├───in_process
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───pkg_resources
    │       │   │   │   └───__pycache__
    │       │   │   ├───progress
    │       │   │   │   └───__pycache__
    │       │   │   ├───requests
    │       │   │   │   └───__pycache__
    │       │   │   ├───resolvelib
    │       │   │   │   ├───compat
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───tenacity
    │       │   │   │   └───__pycache__
    │       │   │   ├───tomli
    │       │   │   │   └───__pycache__
    │       │   │   ├───urllib3
    │       │   │   │   ├───contrib
    │       │   │   │   │   ├───_securetransport
    │       │   │   │   │   │   └───__pycache__
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───packages
    │       │   │   │   │   ├───backports
    │       │   │   │   │   │   └───__pycache__
    │       │   │   │   │   ├───ssl_match_hostname
    │       │   │   │   │   │   └───__pycache__
    │       │   │   │   │   └───__pycache__
    │       │   │   │   ├───util
    │       │   │   │   │   └───__pycache__
    │       │   │   │   └───__pycache__
    │       │   │   ├───webencodings
    │       │   │   │   └───__pycache__
    │       │   │   └───__pycache__
    │       │   └───__pycache__
    │       ├───pip-21.2.3.dist-info
    │       ├───pkg_resources
    │       │   ├───extern
    │       │   │   └───__pycache__
    │       │   ├───tests
    │       │   │   └───data
    │       │   │       └───my-test-package-source
    │       │   │           └───__pycache__
    │       │   ├───_vendor
    │       │   │   ├───packaging
    │       │   │   │   └───__pycache__
    │       │   │   └───__pycache__
    │       │   └───__pycache__
    │       ├───setuptools
    │       │   ├───command
    │       │   │   └───__pycache__
    │       │   ├───extern
    │       │   │   └───__pycache__
    │       │   ├───_distutils
    │       │   │   ├───command
    │       │   │   │   └───__pycache__
    │       │   │   └───__pycache__
    │       │   ├───_vendor
    │       │   │   ├───more_itertools
    │       │   │   │   └───__pycache__
    │       │   │   ├───packaging
    │       │   │   │   └───__pycache__
    │       │   │   └───__pycache__
    │       │   └───__pycache__
    │       ├───setuptools-57.4.0.dist-info
    │       └───_distutils_hack
    │           └───__pycache__
    └───Scripts
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> pip install flask
Collecting flask
  Using cached flask-3.0.3-py3-none-any.whl (101 kB)
Collecting itsdangerous>=2.1.2
  Using cached itsdangerous-2.2.0-py3-none-any.whl (16 kB)
Collecting Werkzeug>=3.0.0
  Using cached werkzeug-3.0.3-py3-none-any.whl (227 kB)
Collecting Jinja2>=3.1.2
  Using cached jinja2-3.1.4-py3-none-any.whl (133 kB)
Collecting click>=8.1.3
  Using cached click-8.1.7-py3-none-any.whl (97 kB)
Collecting importlib-metadata>=3.6.0
  Downloading importlib_metadata-8.2.0-py3-none-any.whl (25 kB)
Collecting blinker>=1.6.2
  Using cached blinker-1.8.2-py3-none-any.whl (9.5 kB)
Collecting colorama
  Using cached colorama-0.4.6-py2.py3-none-any.whl (25 kB)
Collecting zipp>=0.5
  Using cached zipp-3.19.2-py3-none-any.whl (9.0 kB)
Collecting MarkupSafe>=2.0
  Using cached MarkupSafe-2.1.5-cp39-cp39-win_amd64.whl (17 kB)
Installing collected packages: zipp, MarkupSafe, colorama, Werkzeug, Jinja2, itsdangerous, importlib-metadata, click, blinker, flask
Successfully installed Jinja2-3.1.4 MarkupSafe-2.1.5 Werkzeug-3.0.3 blinker-1.8.2 click-8.1.7 colorama-0.4.6 flask-3.0.3 importlib-metadata-8.2.0 itsdangerous-2.2.0 zipp-3.19.2
WARNING: You are using pip version 21.2.3; however, version 24.2 is available.
You should consider upgrading via the 'C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion\venv\Scripts\python.exe -m pip install --upgrade pip' command.
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> tree/f
tree/f : El término 'tree/f' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente 
el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ tree/f
+ ~~~~~~
    + CategoryInfo          : ObjectNotFound: (tree/f:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> python app.py
C:\Users\Usuario\AppData\Local\Programs\Python\Python39\python.exe: can't open file 'C:\Users\Usuario\OneDrive\Escritorio\facultad\dise├▒o\SistemaGestion\app.py': [Errno 2] No such file or directory
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> cdsrc
cdsrc : El término 'cdsrc' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable. Compruebe si escribió correctamente el 
nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e inténtelo de nuevo.
En línea: 1 Carácter: 1
+ cdsrc
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (cdsrc:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion> cd src
PS C:\Users\Usuario\OneDrive\Escritorio\facultad\diseño\SistemaGestion\src> python app.py
 * Serving Flask app 'app'
 * Debug mode: on
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on http://127.0.0.1:5000
Press CTRL+C to quit
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 425-240-697
127.0.0.1 - - [06/Aug/2024 18:50:44] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [06/Aug/2024 18:50:45] "GET /favicon.ico HTTP/1.1" 404 -


-----EXTENSIONES----

dev conteiner 
docker 
git
git action 
python debugger


-----IMPLEMENTACIONES ----

dockerfile
dockercompose.yml
dockerignore
requeriments
gitIGNORE


generar imagen docker
generar contenedor docker
abrir contenedor desde vscode

Shift + Control + P (acceso al contenedor, en visual code.. hay q tener instalada dev container)


#hacer
-crear una rama develop 

#integracion continua

/proyecto
  ├── /src
  │   ├── requirements.txt
  │   └── otros archivos y carpetas
  ├── /venv
  ├── Dockerfile
  ├── .gitignore
  ├── /github (u otra carpeta relacionada con GitHub)
  └── otros archivos y carpetas

# Usa una imagen  base oficial  de Python
FROM python:3.9.7

# Configura el directorio de trabajo dentro del contenedor (app) y los comandos posteriores se ejecutan en ese directorio
WORKDIR /app

# Copia el archivo requirements.txt desde la carpeta src a /app con las dependencias que necesita
COPY src/requirements.txt /app/

# Instala las dependencias desde requirements.txt  / y especifica el comando de cache para q no se almacenen de manera temporal 
RUN pip install --no-cache-dir -r requirements.txt

# Copia todo el contenido de src a /src del contenedor
COPY src/ /src

# Comando por defecto para ejecutar tu aplicación (ajusta según sea necesario)
CMD ["python", "main.py"]  (aap.py)


#contruir la imagen 
docker build -t proyecto-python .


#para correr el contendeor
 docker run -d --name proyecto-python-container -p 8080:8000 proyecto-python:latest



name: IC

on:
  push:
    branches: 
        master
  pull_request:
    branches: 
       master


jobs: #trabajos que se ejecutan  
  build: # nombre del trabajo 
    runs-on: ubuntu-latest  # ejecuta el trabajao en una maquina virtual que corre en ubuntu

    steps: #pasos
    - name: Checkout code #clona el repo en la maquinavirtual
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2 #usa la accion para la configuracion de python en la maquina virtual
      with:
        python-version: '3.9.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    # - name: Run tests
    #   run: |
    #     pytest

    - name: Log in to DockerHub
      uses: docker/login-action@v2 #accion para iniciar session 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image #contruye la imagen 
      run: docker build -t proyecto-python:latest .

    - name: Update TAG  #etiqueta la imagen de docker con tu nombre de usuario dockerhub y nombre de la imagen 
      run: docker tag proyecto-python:latest "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"

#pushe la imagen para que otros la puedan ver 
    - name: Push Docker image to DockerHub
      run: docker push "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"

      


#pasos de configuracion
configurar el git hub y poner credenciales 